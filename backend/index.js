const express = require("express");
const multer = require("multer");
const mqtt = require("mqtt");
const path = require("path");
const process = require("process");

const img2b64 = require("./img2base64");

const mqttConfig = {
  host: "wss://test.mosquitto.org:8081/mqtt",
  topic: "bd0a66104e/data",
};

const PORT = process.env.PORT || 8000;

const app = express();
app.use(express.static(path.join(__dirname, "ui")));
const upload = multer({ storage: multer.memoryStorage() });

let imageData =
gAAEADwB4AAH+OAAAAAAQMEABACCBhggBACGAAAAAEBBAAQAAQgEIAQAgQAAAAAhQQAEAAEIBCAEAICAAAAAIQECBAABEAIgBACAQAAAACEgGIcQARACIAQAgEAAAAAgIhBECAEQAiAEAIBAAAAAAiIgRAgCEAIgBACAQAAAABIiIEQIAhACIAQAgEAAAAASED/ECAQQAiAEAIBAAAAAEhQgBAgIEAIgBACAQAAAAAAUIAQIEAAAIAQAgIAAAAAEFCAECCAIBCAEAIGAAAAADAwQBhDABAggBACCAAAAAAwID8Xg/wPwP8f

let mqttClient = mqtt.connect(mqttConfig.host);
mqttClient.on("connect", function () {
  mqttClient.publish(mqttConfig.topic, "");
});

app.get("/", (_, res) => {
  res.sendFile(path.join(__dirname, "ui", "index.html"));
});

app.post("/upload", upload.single("img"), (req, res) => {
  img2b64(req.file.buffer, (d) => {
    if (d.error) {
      res.status(400);
      res.end("NOT_OK");
    } else {
      imageData = d.data;
      mqttClient.publish(mqttConfig.topic, "");
      res.end("OK");
    }
  });
});

app.get("/bd0a66104e", (_, res) => {
  if (imageData !== undefined) {
    res.end(imageData);
  } else {
    res.status(400);
    res.end();
  }
});

app.listen(PORT, () => {
  console.log("Listening on " + PORT);
});
